// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/RcppQueues.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// parallelVectorSum
double parallelVectorSum(NumericVector x);
RcppExport SEXP _RcppQueues_parallelVectorSum(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(parallelVectorSum(x));
    return rcpp_result_gen;
END_RCPP
}
// parallelMatrixSqrt
NumericMatrix parallelMatrixSqrt(NumericMatrix x);
RcppExport SEXP _RcppQueues_parallelMatrixSqrt(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(parallelMatrixSqrt(x));
    return rcpp_result_gen;
END_RCPP
}
// HumanEventQ__ctor
RcppQueues::HumanEventQ HumanEventQ__ctor(int initQ);
RcppExport SEXP _RcppQueues_HumanEventQ__ctor(SEXP initQSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type initQ(initQSEXP);
    rcpp_result_gen = Rcpp::wrap(HumanEventQ__ctor(initQ));
    return rcpp_result_gen;
END_RCPP
}
// HumanEventQ__firstEvent
Rcpp::List HumanEventQ__firstEvent(RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> obj_);
RcppExport SEXP _RcppQueues_HumanEventQ__firstEvent(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(HumanEventQ__firstEvent(obj_));
    return rcpp_result_gen;
END_RCPP
}
// HumanEventQ__rmFirstEventFromQ
void HumanEventQ__rmFirstEventFromQ(RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> obj_);
RcppExport SEXP _RcppQueues_HumanEventQ__rmFirstEventFromQ(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> >::type obj_(obj_SEXP);
    HumanEventQ__rmFirstEventFromQ(obj_);
    return R_NilValue;
END_RCPP
}
// HumanEventQ__rmTagFromQ
void HumanEventQ__rmTagFromQ(RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> obj_, std::string tag);
RcppExport SEXP _RcppQueues_HumanEventQ__rmTagFromQ(SEXP obj_SEXP, SEXP tagSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< std::string >::type tag(tagSEXP);
    HumanEventQ__rmTagFromQ(obj_, tag);
    return R_NilValue;
END_RCPP
}
// HumanEventQ__get_queueN
int HumanEventQ__get_queueN(RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> obj_);
RcppExport SEXP _RcppQueues_HumanEventQ__get_queueN(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(HumanEventQ__get_queueN(obj_));
    return rcpp_result_gen;
END_RCPP
}
// HumanEventQ__addEvent2Q
void HumanEventQ__addEvent2Q(RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> obj_, Rcpp::List event);
RcppExport SEXP _RcppQueues_HumanEventQ__addEvent2Q(SEXP obj_SEXP, SEXP eventSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> >::type obj_(obj_SEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type event(eventSEXP);
    HumanEventQ__addEvent2Q(obj_, event);
    return R_NilValue;
END_RCPP
}
// HumanEventQ__get_eventQ
Rcpp::List HumanEventQ__get_eventQ(RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> obj_);
RcppExport SEXP _RcppQueues_HumanEventQ__get_eventQ(SEXP obj_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RcppQueues::RcppR6::RcppR6<RcppQueues::HumanEventQ> >::type obj_(obj_SEXP);
    rcpp_result_gen = Rcpp::wrap(HumanEventQ__get_eventQ(obj_));
    return rcpp_result_gen;
END_RCPP
}
// testMethodCpp
arma::mat testMethodCpp(Rcpp::Environment testClassEnv);
RcppExport SEXP _RcppQueues_testMethodCpp(SEXP testClassEnvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Environment >::type testClassEnv(testClassEnvSEXP);
    rcpp_result_gen = Rcpp::wrap(testMethodCpp(testClassEnv));
    return rcpp_result_gen;
END_RCPP
}
// testPublicCpp
void testPublicCpp(Rcpp::Environment publicEnv);
RcppExport SEXP _RcppQueues_testPublicCpp(SEXP publicEnvSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::Environment >::type publicEnv(publicEnvSEXP);
    testPublicCpp(publicEnv);
    return R_NilValue;
END_RCPP
}
// testSearchPath
void testSearchPath(int env);
RcppExport SEXP _RcppQueues_testSearchPath(SEXP envSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type env(envSEXP);
    testSearchPath(env);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppQueues_parallelVectorSum", (DL_FUNC) &_RcppQueues_parallelVectorSum, 1},
    {"_RcppQueues_parallelMatrixSqrt", (DL_FUNC) &_RcppQueues_parallelMatrixSqrt, 1},
    {"_RcppQueues_HumanEventQ__ctor", (DL_FUNC) &_RcppQueues_HumanEventQ__ctor, 1},
    {"_RcppQueues_HumanEventQ__firstEvent", (DL_FUNC) &_RcppQueues_HumanEventQ__firstEvent, 1},
    {"_RcppQueues_HumanEventQ__rmFirstEventFromQ", (DL_FUNC) &_RcppQueues_HumanEventQ__rmFirstEventFromQ, 1},
    {"_RcppQueues_HumanEventQ__rmTagFromQ", (DL_FUNC) &_RcppQueues_HumanEventQ__rmTagFromQ, 2},
    {"_RcppQueues_HumanEventQ__get_queueN", (DL_FUNC) &_RcppQueues_HumanEventQ__get_queueN, 1},
    {"_RcppQueues_HumanEventQ__addEvent2Q", (DL_FUNC) &_RcppQueues_HumanEventQ__addEvent2Q, 2},
    {"_RcppQueues_HumanEventQ__get_eventQ", (DL_FUNC) &_RcppQueues_HumanEventQ__get_eventQ, 1},
    {"_RcppQueues_testMethodCpp", (DL_FUNC) &_RcppQueues_testMethodCpp, 1},
    {"_RcppQueues_testPublicCpp", (DL_FUNC) &_RcppQueues_testPublicCpp, 1},
    {"_RcppQueues_testSearchPath", (DL_FUNC) &_RcppQueues_testSearchPath, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppQueues(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
